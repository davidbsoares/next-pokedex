import Tag from '@components/Tag';
import axios from 'axios';
import COLORS from 'constants/colors';
import type { GetServerSidePropsContext, NextPage } from 'next';
import Head from 'next/head';
import { Barbell, Ruler } from 'phosphor-react';
import { PokemonProps } from 'types';

interface pageProps {
  pokemon: PokemonProps;
}

const Pokemon: NextPage<pageProps> = ({ pokemon }) => {
  const firstType = pokemon && pokemon.types?.[0]?.type?.name;

  const types = pokemon && pokemon.types;
  console.log(pokemon);
  return (
    <div
      className="w-screen h-screen flex items-center justify-center"
      style={{ backgroundColor: firstType && COLORS.types[firstType] }}
    >
      <Head>
        <title>Pokedex | {pokemon.name}</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div
        className="flex flex-col align-center w-1/3"
        style={{ backgroundColor: firstType && COLORS.types[firstType] }}
      >
        <div className="flex flex-col justify-center items-center w-full bg-white px-5 pb-11  rounded-lg relative">
          <img
            src={pokemon.sprites.other['official-artwork'].front_default}
            alt={pokemon.name}
            className="absolute w-48 aspect-square top-0 left-1/2 -translate-y-3/4 -translate-x-1/2"
          />
          <div className="flex gap-4 align-center justify-center mt-12">
            {types &&
              types.map((t: any, i: number) => (
                <Tag key={i} type={t.type.name} />
              ))}
          </div>
          <h2
            className="text-lg font-bold my-4"
            style={{ color: firstType && COLORS.types[firstType] }}
          >
            About
          </h2>
          <div className="flex mb-6 items-end">
            <div className="flex flex-col gap-y-1 px-4">
              <div className="flex gap-x-1 items-center justify-center">
                <Barbell size={26} />
                <span className="text-sm">{pokemon?.weight / 10} Kg</span>
              </div>
              <span className="text-sm text-center font-bold">Weight</span>
            </div>
            <div className="flex flex-col gap-y-1 px-4">
              <div className="flex gap-x-1 items-center justify-center">
                <Ruler size={26} />
                <span className="text-sm">{pokemon?.height / 10} m</span>
              </div>
              <span className="text-sm text-center font-bold">Height</span>
            </div>
            <div className="flex flex-col gap-y-1 px-4">
              <div className="flex flex-col text-center">
                {pokemon?.moves?.slice(0, 2).map(({ move }, index) => (
                  <span className="text-sm" key={index}>
                    {move?.name}
                  </span>
                ))}
              </div>
              <span className="text-sm text-center font-bold">Moves</span>
            </div>
          </div>
          <h2
            className="text-lg font-bold my-4"
            style={{ color: firstType && COLORS.types[firstType] }}
          >
            Base Stats
          </h2>
          <div>StatsWrapper</div>
        </div>
      </div>
    </div>
  );
};

export async function getServerSideProps(context: GetServerSidePropsContext) {
  const pokemonName = context.query.pokemon;
  try {
    const pokemon = await axios
      .get(`https://pokeapi.co/api/v2/pokemon/${pokemonName}`)
      .then(({ data }) => data);

    return { props: { pokemon } };
  } catch (error) {
    return { props: { error } };
  }
}

export default Pokemon;
